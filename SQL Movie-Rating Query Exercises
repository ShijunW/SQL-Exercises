--Movie ( mID, title, year, director ) 
--English: There is a movie with ID number mID, a title, a release year, and a director. 

--Reviewer ( rID, name ) 
--English: The reviewer with ID number rID has a certain name. 

--Rating ( rID, mID, stars, ratingDate ) 
--English: The reviewer rID gave the movie mID a number of stars rating (1-5) on a certain ratingDate. 
------------------------------------------------------------------------------------------------------

--Q1 Find the titles of all movies directed by Steven Spielberg. 
SELECT title
FROM Movie
WHERE director = 'Steven Spielberg';

--Q2 Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order. 
SELECT DISTINCT year
FROM Movie, Rating
WHERE Movie.mID=Rating.mID AND stars IN (4,5)
ORDER BY year;

SELECT DISTINCT year
FROM Movie JOIN Rating USING (mID)
WHERE stars IN (4,5)
ORDER BY year;

SELECT DISTINCT year
FROM Movie NATURAL JOIN Rating
WHERE stars >= 4
ORDER BY year;

--Q3 Find the titles of all movies that have no ratings. 
SELECT title
FROM Movie
WHERE mID NOT IN (SELECT mID FROM Rating);

--Q4 Some reviewers didn't provide a date with their rating. Find the names of all reviewers who have ratings with a NULL value for the date. 
SELECT name
FROM Reviewer, Rating
WHERE Reviewer.rID=Rating.rID and ratingDate IS null;

SELECT name
FROM Reviewer INNER JOIN Rating USING (rID)
WHERE ratingDate IS null;

--Q5 Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars.
SELECT name, title, stars, ratingDate
FROM Movie, Rating, Reviewer
WHERE Movie.mId = Rating.mId AND Reviewer.rId = Rating.rId
ORDER BY name, title, stars;

SELECT name, title, stars, ratingDate
FROM Movie join Rating using (mID)
 join Reviewer using (rID)
ORDER BY name, title, stars;

--Q6 For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, return the reviewer's name and the title of the movie.
SELECT name, title
FROM Movie
INNER JOIN Rating R1 USING(mID)
INNER JOIN Rating R2 USING(rID, mID)
INNER JOIN Reviewer USING(rID)
WHERE R1.ratingDate < R2.ratingDate AND R1.stars < R2.stars;

